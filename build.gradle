plugins {
    id 'org.springframework.boot' version '2.4.1'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}

group = 'com.project.spring'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile group: 'net.sf.supercsv', name: 'super-csv', version: '2.4.0'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.hibernate:hibernate-validator:6.1.6.Final'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'jakarta.xml.bind:jakarta.xml.bind-api:2.3.2'
	implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.2'
	implementation 'com.google.guava:guava:30.1-jre'
	runtimeOnly 'mysql:mysql-connector-java'
	runtimeOnly 'com.h2database:h2'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

}

test {
    useJUnitPlatform()
}

apply plugin: 'checkstyle'
checkstyle {
	toolVersion '8.38'
	configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
}
checkstyleMain {
	source = 'src/main/java'
}
checkstyleTest {
	source = 'src/test/java'
}
